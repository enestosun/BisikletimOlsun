{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\n\nvar LocationPicker = function LocationPicker(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFetching = _useState2[0],\n      setIsFetching = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickedLocation = _useState4[0],\n      setPickedLocation = _useState4[1];\n\n  var start = useRef(0);\n\n  var verifyPermissions = function verifyPermissions() {\n    var result;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('Insufficient permissions!', 'You need to grant location permissions to use this app.', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLocationHandler = function getLocationHandler() {\n    var hasPermission, location;\n    return _regeneratorRuntime.async(function getLocationHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.prev = 5;\n            setIsFetching(true);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              timeout: 5000\n            }));\n\n          case 9:\n            location = _context2.sent;\n            setPickedLocation({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            });\n            fetch('https://location-5e8be-default-rtdb.firebaseio.com/currentLocation/-MquOke75lUT6bPsdSHA.json', {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                lat: location.coords.latitude,\n                lng: location.coords.longitude\n              })\n            });\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](5);\n            Alert.alert('Could not fetch location!', 'Please try again later or pick a location on the map.', [{\n              text: 'Okay'\n            }]);\n\n          case 17:\n            setIsFetching(false);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 14]], Promise);\n  };\n\n  if (start.current === 0) {\n    start.current = 1;\n    var i = 1;\n    setInterval(function () {\n      getLocationHandler();\n      console.log(i++);\n    }, 60000);\n  }\n\n  return React.createElement(View, {\n    style: styles.locationPicker\n  }, React.createElement(View, {\n    style: styles.mapPreview\n  }, isFetching ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"blue\"\n  }) : pickedLocation ? React.createElement(Text, null, \"lat:\", pickedLocation.lat, \" lng:\", pickedLocation.lng) : React.createElement(Text, null, \"Null\")));\n};\n\nvar styles = StyleSheet.create({\n  locationPicker: {\n    marginBottom: 15\n  },\n  mapPreview: {\n    marginBottom: 10,\n    width: '100%',\n    height: 150,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default LocationPicker;","map":{"version":3,"sources":["C:/Work/React-Native/expo/phone-location/components/LocationPicker.js"],"names":["React","useState","useRef","Location","Permissions","LocationPicker","props","isFetching","setIsFetching","pickedLocation","setPickedLocation","start","verifyPermissions","requestForegroundPermissionsAsync","result","status","Alert","alert","text","getLocationHandler","hasPermission","getCurrentPositionAsync","timeout","location","lat","coords","latitude","lng","longitude","fetch","method","headers","body","JSON","stringify","current","i","setInterval","console","log","styles","locationPicker","mapPreview","StyleSheet","create","marginBottom","width","height","borderColor","borderWidth","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;;;;AAUA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,kBAAoCL,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOM,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA4CP,QAAQ,EAApD;AAAA;AAAA,MAAOQ,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAMC,KAAK,GAAGT,MAAM,CAAC,CAAD,CAApB;;AAEA,MAAMU,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACHT,QAAQ,CAACU,iCAAT,EADG;;AAAA;AAClBC,YAAAA,MADkB;;AAAA,kBAEpBA,MAAM,CAACC,MAAP,KAAkB,SAFE;AAAA;AAAA;AAAA;;AAGtBC,YAAAA,KAAK,CAACC,KAAN,CACE,2BADF,EAEE,yDAFF,EAGE,CAAC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAD,CAHF;AAHsB,6CAQf,KARe;;AAAA;AAAA,6CAUjB,IAViB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAaA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGP,iBAAiB,EADpB;;AAAA;AACnBQ,YAAAA,aADmB;;AAAA,gBAEpBA,aAFoB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAOvBZ,YAAAA,aAAa,CAAC,IAAD,CAAb;AAPuB;AAAA,6CAQAL,QAAQ,CAACkB,uBAAT,CAAiC;AACtDC,cAAAA,OAAO,EAAE;AAD6C,aAAjC,CARA;;AAAA;AAQjBC,YAAAA,QARiB;AAWvBb,YAAAA,iBAAiB,CAAC;AAChBc,cAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADL;AAEhBC,cAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFL,aAAD,CAAjB;AAKAC,YAAAA,KAAK,CAAC,8FAAD,EAAiG;AACpGC,cAAAA,MAAM,EAAE,OAD4F;AAEpGC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAF2F;AAKpGC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,gBAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADF;AAEnBC,gBAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFF,eAAf;AAL8F,aAAjG,CAAL;AAhBuB;AAAA;;AAAA;AAAA;AAAA;AA4BvBZ,YAAAA,KAAK,CAACC,KAAN,CACE,2BADF,EAEE,uDAFF,EAGE,CAAC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAD,CAHF;;AA5BuB;AAkCzBV,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAlCyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAuCA,MAAIG,KAAK,CAACwB,OAAN,KAAkB,CAAtB,EAAyB;AACvBxB,IAAAA,KAAK,CAACwB,OAAN,GAAgB,CAAhB;AACA,QAAIC,CAAC,GAAG,CAAR;AACAC,IAAAA,WAAW,CAAC,YAAM;AAChBlB,MAAAA,kBAAkB;AAElBmB,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,EAAb;AACD,KAJU,EAIR,KAJQ,CAAX;AAKD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACGnC,UAAU,GACT,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC;AAAtC,IADS,GAGTE,cAAc,GAAG,oBAAC,IAAD,gBAAWA,cAAc,CAACe,GAA1B,WAAoCf,cAAc,CAACkB,GAAnD,CAAH,GAAoE,oBAAC,IAAD,eAJtF,CADF,CADF;AAgBD,CAnFD;;AAqFA,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,YAAY,EAAE;AADA,GADe;AAI/BH,EAAAA,UAAU,EAAE;AACVG,IAAAA,YAAY,EAAE,EADJ;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,MAAM,EAAE,GAHE;AAIVC,IAAAA,WAAW,EAAE,MAJH;AAKVC,IAAAA,WAAW,EAAE,CALH;AAMVC,IAAAA,cAAc,EAAE,QANN;AAOVC,IAAAA,UAAU,EAAE;AAPF;AAJmB,CAAlB,CAAf;AAeA,eAAe9C,cAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n  View,\n  Button,\n  Text,\n  ActivityIndicator,\n  Alert,\n  StyleSheet\n} from 'react-native';\n\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\n\nconst LocationPicker = props => {\n  const [isFetching, setIsFetching] = useState(false);\n  const [pickedLocation, setPickedLocation] = useState();\n  const start = useRef(0);\n\n  const verifyPermissions = async () => {\n    const result = await Location.requestForegroundPermissionsAsync();\n    if (result.status !== 'granted') {\n      Alert.alert(\n        'Insufficient permissions!',\n        'You need to grant location permissions to use this app.',\n        [{ text: 'Okay' }]\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const getLocationHandler = async () => {\n    const hasPermission = await verifyPermissions();\n    if (!hasPermission) {\n      return;\n    }\n\n    try {\n      setIsFetching(true);\n      const location = await Location.getCurrentPositionAsync({\n        timeout: 5000\n      });\n      setPickedLocation({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n\n      fetch('https://location-5e8be-default-rtdb.firebaseio.com/currentLocation/-MquOke75lUT6bPsdSHA.json', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          lat: location.coords.latitude,\n          lng: location.coords.longitude\n        })\n      })\n\n    } catch (err) {\n      Alert.alert(\n        'Could not fetch location!',\n        'Please try again later or pick a location on the map.',\n        [{ text: 'Okay' }]\n      );\n    }\n    setIsFetching(false);\n  };\n\n\n\n  if (start.current === 0) {\n    start.current = 1;\n    let i = 1;\n    setInterval(() => {\n      getLocationHandler()\n\n      console.log(i++);\n    }, 60000);\n  }\n\n  return (\n    <View style={styles.locationPicker}>\n      <View style={styles.mapPreview}>\n        {isFetching ? (\n          <ActivityIndicator size=\"large\" color=\"blue\" />\n        ) : (\n          pickedLocation ? <Text>lat:{pickedLocation.lat} lng:{pickedLocation.lng}</Text> : <Text>Null</Text>\n        )}\n      </View>\n      {/* <Button\n        title=\"Get User Location\"\n        color=\"blue\"\n        onPress={getLocationHandler}\n      /> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  locationPicker: {\n    marginBottom: 15\n  },\n  mapPreview: {\n    marginBottom: 10,\n    width: '100%',\n    height: 150,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nexport default LocationPicker;\n"]},"metadata":{},"sourceType":"module"}